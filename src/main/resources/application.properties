spring.thymeleaf.cache=false

spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mariadb://localhost:3306/spring
spring.datasource.username=root
spring.datasource.password=0107

# SMTP 설정
spring.mail.host=smtp.naver.com
spring.mail.port=587
spring.mail.username=
spring.mail.password=

# SMTP 보안 설정 (TLS를 사용하는 경우)
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.auth=true

#spring.datasource.url=jdbc:mysql://데이터베이스

server.port=80

spring.jpa.show-sql=true

spring.jpa.hibernate.ddl-auto=update

spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.show-sql=true

logging.level.org.hibernate.type.desriptor.sql=trace
spring.jpa.open-in-view=true

logging.level.web=debug

logging.level.org.hibernate.SQL = DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=trace

spring.mvc.log-request-details=true

spring.jpa.properties.hibernate.highlight_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true


#스프링에서는 파일 업로드를 처리하는 방법이 많지만 우린 기본 내장딘 tocat 의 servlet API 를 이용해서 업로드 처리 할 예정입니다.
# 아래는 업로드 처리시 서버에서 수행해야 할 기본 설정 작업 내용입니다.
# 아래 반드시 해야한다.  multipart 패키지의 모든 API 를 사용가능하도록 설정
spring.servlet.multipart.enabled=true
#업로드 시 저장 될 폴더 지정
spring.servlet.multipart.location=D:\\upload
#요청 시 한번에 처리할 최대 파일 사이즈 지정
spring.servlet.multipart.max-request-size = 1024MB
#파일 하나의 최대 크기 설정
spring.servlet.multipart.max-file-size=100MB















